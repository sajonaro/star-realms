openapi: 3.0.3
info:
  title: Star realms game API
  description: |-
    defined using Open API and swagger-editor tool
  version: 0.0.1
externalDocs:
  description: find out more about swagger.io
  url: http://swagger.io
servers:
  - url: http://localhost:4040/api/v1
    description: dev server
paths:
  /game:
    get:
      summary: get a list of games
      tags:
        - game
      operationId: getAllGames
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/games'
    post:
      tags:
        - game
      summary: create new game
      operationId: createGame
      requestBody:
        description: Create a new game
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/game'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'          
        '405':
          description: Invalid input
      security:
        - starrealms_auth:
            - write:games
            - read:games
  /connect/{player_name}:
    post:
      tags:
        - player
      summary: login into game server
      description: no need to sign in to use the game.
      operationId: createPlayer
      parameters:
        - name: player_name
          in: path
          description: player name connecting to server
          required: true
          schema:
            type: string
      requestBody:
        description: Created player object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
  /{gameId}/game/{playerId}/join:
    put:
      tags:
        - player
      summary: join specific game 
      description: no need to sign in to use the game.
      operationId: joinGame
      parameters:
        - name: playerId
          in: path
          description: player's ID connecting to server
          required: true
          schema:
            type: integer
            format: int32
        - name: gameId
          in: path
          description: game ID player is willing to join
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        default:
          description: exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /player:
    get:
      summary: get a list of players
      tags:
        - player
      operationId: getAllplayers
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/players'
components:
  schemas:
    player:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: theUser
        movesFirst:
          type: boolean
          description: true if this player moves first
          format: boolean
          example: true
    players:
      type: array
      items:
        $ref: '#/components/schemas/player'
    game:
      required:
        - id
        - createdBy
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        createdBy:
          type: string
          example: doggie
        players:
          type: array
          items:
            $ref: '#/components/schemas/player'
        status:
          type: string
          description: game status
          enum:
            - created
            - started
            - ended
    games:
      type: array
      items:
        $ref: '#/components/schemas/game'
    error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: "internal error"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    game:
      description: game object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/game'
    UserArray:
      description: List of games
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/games'
  securitySchemes:
    starrealms_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://localhost:4040/api/oauth/authorize
          scopes:
            write:games: modify games in your account
            read:games: read your games
    api_key:
      type: apiKey
      name: api_key
      in: header