version: '3.5'


volumes:
  data:
    driver: local

networks:
  game-net:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1    

services:

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui
    restart: always
    networks:
      game-net:
        ipv4_address: 10.5.0.2   
    ports:
      - 4040:80 
    environment:
      PUBLIC_URL: http://localhost/

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gameserver
    restart: always
    networks:
      game-net:
        ipv4_address: 10.5.0.3   
    ports:
      - 5000:80 
    environment:
      PORT: 80
      DB_SERVER: POSTGRES_DB 
      DB_USER: starrealms_app
      DB_PASSWORD: pwd
      DB_NAME: game_state

  database:
    build: 
      context: ./database
      dockerfile: Dockerfile
    container_name: POSTGRES_DB
    restart: always
    networks:
      game-net:
        ipv4_address: 10.5.0.4   
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: game_state
      POSTGRES_USER: starrealms_app
      POSTGRES_PASSWORD: pwd
      PGDATA: /var/lib/postgresql/data/
    command: ["postgres", "-c", "config_file=/etc/postgresql.conf"]    
    volumes:
      - data:/var/lib/postgresql/data/
      - ./database/postgresql.conf:/etc/postgresql.conf
      - ./database/pg_hba.conf:/etc/postgresql/pg_hba.conf

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    networks:
      game-net:
        ipv4_address: 10.5.0.5   
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: POSTGRES_DB:5432  

  proxy:
    build: 
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    depends_on:
        - ui
        - api
    networks:
      game-net:
        ipv4_address: 10.5.0.6       
    ports:
      - 80:80    